{
    "sourceFile": "src/app/_components/homepage-posts.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1738834796716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738834830632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,58 +1,40 @@\n+import { serverApi } from \"@/trpc/server\"\r\n+import HomepageCard from \"./homepage-card\"\r\n import Link from \"next/link\"\r\n-import { Card } from \"@/components/ui/card\"\r\n+import { ArrowRight } from \"lucide-react\"\r\n \r\n-// This type should match your actual post data structure\r\n-interface Post {\r\n-  id: string\r\n-  title: string\r\n-  description: string\r\n-  url: string\r\n-  memberCount?: string\r\n-  backgroundColor?: string\r\n-  textColor?: string\r\n-}\r\n+const HomepagePosts = async () => {\r\n+  const data = await serverApi.post.getAll()\r\n \r\n-interface HomepageCardProps {\r\n-  data: Post\r\n-}\r\n-\r\n-// Function to determine background color based on post data\r\n-const getBackgroundColor = (post: Post) => {\r\n-  // You can implement your own logic to determine background color\r\n-  // This is just an example - modify according to your needs\r\n-  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n-  return post.backgroundColor || colors[Math.floor(Math.random() * colors.length)]\r\n-}\r\n-\r\n-// Function to determine text color based on background\r\n-const getTextColor = (post: Post) => {\r\n-  // You can implement your own logic to determine text color\r\n-  // This is just an example - modify according to your needs\r\n-  return post.textColor || (post.backgroundColor?.includes(\"FF\") ? \"text-black\" : \"text-white\")\r\n-}\r\n-\r\n-export default function HomepageCard({ data }: HomepageCardProps) {\r\n-  const backgroundColor = getBackgroundColor(data)\r\n-  const textColor = getTextColor(data)\r\n-\r\n   return (\r\n-    <Link href={data.url} className=\"group\">\r\n-      <Card\r\n-        className={`overflow-hidden transition-transform duration-300 group-hover:-translate-y-1 ${backgroundColor} ${textColor}`}\r\n-      >\r\n-        <div className=\"aspect-[4/3] relative\">\r\n-          <div className=\"absolute inset-0 bg-black/10\" />\r\n-        </div>\r\n-        <div className=\"p-6\">\r\n-          <h3 className=\"text-xl font-bold mb-2\">{data.title}</h3>\r\n-          <p className=\"text-sm mb-4 opacity-90\">{data.description}</p>\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <span className=\"text-sm\">{data.url}</span>\r\n-            {data.memberCount && <span className=\"text-sm\">{data.memberCount}</span>}\r\n+    <section className=\"py-16 bg-background\">\r\n+      <div className=\"container px-4 md:px-6\">\r\n+        <div className=\"flex items-center justify-between mb-8\">\r\n+          <div className=\"flex items-center gap-4\">\r\n+            <h2 className=\"text-lg font-semibold\">FEATURED</h2>\r\n+            <Link href=\"/all\" className=\"text-sm text-pink-500 hover:text-pink-600\">\r\n+              ALL\r\n+            </Link>\r\n           </div>\r\n+          <div className=\"flex gap-2\">\r\n+            <button className=\"p-2 rounded-full hover:bg-gray-100\">\r\n+              <ArrowRight className=\"h-4 w-4 rotate-180\" />\r\n+            </button>\r\n+            <button className=\"p-2 rounded-full hover:bg-gray-100\">\r\n+              <ArrowRight className=\"h-4 w-4\" />\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n-      </Card>\r\n-    </Link>\r\n+\r\n+        <div className=\"grid gap-8 md:grid-cols-3\">\r\n+          {data.map((post) => (\r\n+            <HomepageCard data={post} key={post.id} />\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+    </section>\r\n   )\r\n }\r\n \r\n+export default HomepagePosts\r\n+\r\n"
                },
                {
                    "date": 1738834883659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,58 @@\n-import { serverApi } from \"@/trpc/server\"\r\n-import HomepageCard from \"./homepage-card\"\r\n import Link from \"next/link\"\r\n-import { ArrowRight } from \"lucide-react\"\r\n+import { Card } from \"@/components/ui/card\"\r\n \r\n-const HomepagePosts = async () => {\r\n-  const data = await serverApi.post.getAll()\r\n+// This type should match your actual post data structure\r\n+interface Post {\r\n+  id: string\r\n+  title: string\r\n+  description: string\r\n+  url: string\r\n+  memberCount?: string\r\n+  backgroundColor?: string\r\n+  textColor?: string\r\n+}\r\n \r\n+interface HomepageCardProps {\r\n+  data: Post\r\n+}\r\n+\r\n+// Function to determine background color based on post data\r\n+const getBackgroundColor = (post: Post) => {\r\n+  // You can implement your own logic to determine background color\r\n+  // This is just an example - modify according to your needs\r\n+  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n+  return post.backgroundColor || colors[Math.floor(Math.random() * colors.length)]\r\n+}\r\n+\r\n+// Function to determine text color based on background\r\n+const getTextColor = (post: Post) => {\r\n+  // You can implement your own logic to determine text color\r\n+  // This is just an example - modify according to your needs\r\n+  return post.textColor || (post.backgroundColor?.includes(\"FF\") ? \"text-black\" : \"text-white\")\r\n+}\r\n+\r\n+export default function HomepageCard({ data }: HomepageCardProps) {\r\n+  const backgroundColor = getBackgroundColor(data)\r\n+  const textColor = getTextColor(data)\r\n+\r\n   return (\r\n-    <section className=\"py-16 bg-background\">\r\n-      <div className=\"container px-4 md:px-6\">\r\n-        <div className=\"flex items-center justify-between mb-8\">\r\n-          <div className=\"flex items-center gap-4\">\r\n-            <h2 className=\"text-lg font-semibold\">FEATURED</h2>\r\n-            <Link href=\"/all\" className=\"text-sm text-pink-500 hover:text-pink-600\">\r\n-              ALL\r\n-            </Link>\r\n+    <Link href={data.url} className=\"group\">\r\n+      <Card\r\n+        className={`overflow-hidden transition-transform duration-300 group-hover:-translate-y-1 ${backgroundColor} ${textColor}`}\r\n+      >\r\n+        <div className=\"aspect-[4/3] relative\">\r\n+          <div className=\"absolute inset-0 bg-black/10\" />\r\n+        </div>\r\n+        <div className=\"p-6\">\r\n+          <h3 className=\"text-xl font-bold mb-2\">{data.title}</h3>\r\n+          <p className=\"text-sm mb-4 opacity-90\">{data.description}</p>\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <span className=\"text-sm\">{data.url}</span>\r\n+            {data.memberCount && <span className=\"text-sm\">{data.memberCount}</span>}\r\n           </div>\r\n-          <div className=\"flex gap-2\">\r\n-            <button className=\"p-2 rounded-full hover:bg-gray-100\">\r\n-              <ArrowRight className=\"h-4 w-4 rotate-180\" />\r\n-            </button>\r\n-            <button className=\"p-2 rounded-full hover:bg-gray-100\">\r\n-              <ArrowRight className=\"h-4 w-4\" />\r\n-            </button>\r\n-          </div>\r\n         </div>\r\n-\r\n-        <div className=\"grid gap-8 md:grid-cols-3\">\r\n-          {data.map((post) => (\r\n-            <HomepageCard data={post} key={post.id} />\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-    </section>\r\n+      </Card>\r\n+    </Link>\r\n   )\r\n }\r\n \r\n-export default HomepagePosts\r\n-\r\n"
                },
                {
                    "date": 1738834892297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,58 +1,18 @@\n-import Link from \"next/link\"\r\n-import { Card } from \"@/components/ui/card\"\r\n+import HomepageCard from \"@/app/_components/homepage-card\";\r\n+import { serverApi } from \"@/trpc/server\";\r\n \r\n-// This type should match your actual post data structure\r\n-interface Post {\r\n-  id: string\r\n-  title: string\r\n-  description: string\r\n-  url: string\r\n-  memberCount?: string\r\n-  backgroundColor?: string\r\n-  textColor?: string\r\n-}\r\n+import React from \"react\";\r\n \r\n-interface HomepageCardProps {\r\n-  data: Post\r\n-}\r\n+const HomepagePosts = async () => {\r\n+  const data = await serverApi.post.getAll();\r\n \r\n-// Function to determine background color based on post data\r\n-const getBackgroundColor = (post: Post) => {\r\n-  // You can implement your own logic to determine background color\r\n-  // This is just an example - modify according to your needs\r\n-  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n-  return post.backgroundColor || colors[Math.floor(Math.random() * colors.length)]\r\n-}\r\n-\r\n-// Function to determine text color based on background\r\n-const getTextColor = (post: Post) => {\r\n-  // You can implement your own logic to determine text color\r\n-  // This is just an example - modify according to your needs\r\n-  return post.textColor || (post.backgroundColor?.includes(\"FF\") ? \"text-black\" : \"text-white\")\r\n-}\r\n-\r\n-export default function HomepageCard({ data }: HomepageCardProps) {\r\n-  const backgroundColor = getBackgroundColor(data)\r\n-  const textColor = getTextColor(data)\r\n-\r\n   return (\r\n-    <Link href={data.url} className=\"group\">\r\n-      <Card\r\n-        className={`overflow-hidden transition-transform duration-300 group-hover:-translate-y-1 ${backgroundColor} ${textColor}`}\r\n-      >\r\n-        <div className=\"aspect-[4/3] relative\">\r\n-          <div className=\"absolute inset-0 bg-black/10\" />\r\n-        </div>\r\n-        <div className=\"p-6\">\r\n-          <h3 className=\"text-xl font-bold mb-2\">{data.title}</h3>\r\n-          <p className=\"text-sm mb-4 opacity-90\">{data.description}</p>\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <span className=\"text-sm\">{data.url}</span>\r\n-            {data.memberCount && <span className=\"text-sm\">{data.memberCount}</span>}\r\n-          </div>\r\n-        </div>\r\n-      </Card>\r\n-    </Link>\r\n-  )\r\n-}\r\n+    <div className=\"grid gap-8 md:grid-cols-3\">\r\n+      {data.map((post) => (\r\n+        <HomepageCard data={post} key={post.id} />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+};\r\n \r\n+export default HomepagePosts;\r\n"
                },
                {
                    "date": 1738835061257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,40 @@\n-import HomepageCard from \"@/app/_components/homepage-card\";\r\n-import { serverApi } from \"@/trpc/server\";\r\n+import { serverApi } from \"@/trpc/server\"\r\n+import HomepageCard from \"./homepage-card\"\r\n+import Link from \"next/link\"\r\n+import { ArrowRight } from \"lucide-react\"\r\n \r\n-import React from \"react\";\r\n-\r\n const HomepagePosts = async () => {\r\n-  const data = await serverApi.post.getAll();\r\n+  const data = await serverApi.post.getAll()\r\n \r\n   return (\r\n-    <div className=\"grid gap-8 md:grid-cols-3\">\r\n-      {data.map((post) => (\r\n-        <HomepageCard data={post} key={post.id} />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-};\r\n+    <section className=\"py-16 bg-background\">\r\n+      <div className=\"container px-4 md:px-6\">\r\n+        <div className=\"flex items-center justify-between mb-8\">\r\n+          <div className=\"flex items-center gap-4\">\r\n+            <h2 className=\"text-lg font-semibold\">FEATURED</h2>\r\n+            <Link href=\"/all\" className=\"text-sm text-pink-500 hover:text-pink-600\">\r\n+              ALL\r\n+            </Link>\r\n+          </div>\r\n+          <div className=\"flex gap-2\">\r\n+            <button className=\"p-2 rounded-full hover:bg-gray-100\">\r\n+              <ArrowRight className=\"h-4 w-4 rotate-180\" />\r\n+            </button>\r\n+            <button className=\"p-2 rounded-full hover:bg-gray-100\">\r\n+              <ArrowRight className=\"h-4 w-4\" />\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n \r\n-export default HomepagePosts;\r\n+        <div className=\"grid gap-8 md:grid-cols-2 lg:grid-cols-3\">\r\n+          {data.map((post) => (\r\n+            <HomepageCard data={post} key={post.id} />\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+    </section>\r\n+  )\r\n+}\r\n+\r\n+export default HomepagePosts\r\n+\r\n"
                },
                {
                    "date": 1738835809908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,30 @@\n-import { serverApi } from \"@/trpc/server\"\r\n import HomepageCard from \"./homepage-card\"\r\n import Link from \"next/link\"\r\n import { ArrowRight } from \"lucide-react\"\r\n \r\n-const HomepagePosts = async () => {\r\n-  const data = await serverApi.post.getAll()\r\n+const developerJokes = [\r\n+  \"Why do programmers prefer dark mode? Because light attracts bugs!\",\r\n+  \"A SQL query walks into a bar, walks up to two tables and asks... 'Can I join you?'\",\r\n+  \"Why do Java developers wear glasses? Because they don't C#!\",\r\n+  \"How many programmers does it take to change a light bulb? None, that's a hardware problem.\",\r\n+  \"Why was the JavaScript developer sad? Because he didn't Node how to Express himself.\",\r\n+  \"Why did the developer go broke? Because he used up all his cache.\",\r\n+  \"Why did the programmer quit his job? Because he didn't get arrays.\",\r\n+  \"What's a programmer's favorite hangout place? Foo Bar.\",\r\n+]\r\n \r\n+const cardData = [\r\n+  { title: \"ToDy95\", color: \"bg-blue-500\" },\r\n+  { title: \"BiancaTuna\", color: \"bg-green-500\" },\r\n+  { title: \"MedaToma\", color: \"bg-yellow-500\" },\r\n+  { title: \"SimonaGhior\", color: \"bg-purple-500\" },\r\n+  { title: \"Cipster93\", color: \"bg-red-500\" },\r\n+  { title: \"RobertBalu\", color: \"bg-indigo-500\" },\r\n+  { title: \"WageGG\", color: \"bg-pink-500\" },\r\n+]\r\n+\r\n+const HomepagePosts = () => {\r\n   return (\r\n     <section className=\"py-16 bg-background\">\r\n       <div className=\"container px-4 md:px-6\">\r\n         <div className=\"flex items-center justify-between mb-8\">\r\n@@ -26,10 +44,22 @@\n           </div>\r\n         </div>\r\n \r\n         <div className=\"grid gap-8 md:grid-cols-2 lg:grid-cols-3\">\r\n-          {data.map((post) => (\r\n-            <HomepageCard data={post} key={post.id} />\r\n+          {cardData.map((card, index) => (\r\n+            <HomepageCard\r\n+              key={card.title}\r\n+              data={{\r\n+                id: `${index}`,\r\n+                title: card.title,\r\n+                content: developerJokes[index % developerJokes.length],\r\n+                author: \"Developer\",\r\n+                createdAt: new Date().toISOString(),\r\n+                imageUrl: `/placeholder.jpg?text=${card.title}`,\r\n+              }}\r\n+              index={index}\r\n+              color={card.color}\r\n+            />\r\n           ))}\r\n         </div>\r\n       </div>\r\n     </section>\r\n"
                },
                {
                    "date": 1738836320407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,15 +13,15 @@\n   \"What's a programmer's favorite hangout place? Foo Bar.\",\r\n ]\r\n \r\n const cardData = [\r\n-  { title: \"ToDy95\", color: \"bg-blue-500\" },\r\n-  { title: \"BiancaTuna\", color: \"bg-green-500\" },\r\n-  { title: \"MedaToma\", color: \"bg-yellow-500\" },\r\n-  { title: \"SimonaGhior\", color: \"bg-purple-500\" },\r\n-  { title: \"Cipster93\", color: \"bg-red-500\" },\r\n-  { title: \"RobertBalu\", color: \"bg-indigo-500\" },\r\n-  { title: \"WageGG\", color: \"bg-pink-500\" },\r\n+  { title: \"ToDy95\", color: \"bg-blue-500\", job: \"Frontend Developer\" },\r\n+  { title: \"BiancaTuna\", color: \"bg-green-500\", job: \"Backend Developer\" },\r\n+  { title: \"MedaToma\", color: \"bg-yellow-500\", job: \"Full Stack Developer\" },\r\n+  { title: \"SimonaGhior\", color: \"bg-purple-500\", job: \"UI/UX Designer\" },\r\n+  { title: \"Cipster93\", color: \"bg-red-500\", job: \"DevOps Engineer\" },\r\n+  { title: \"RobertBalu\", color: \"bg-indigo-500\", job: \"Data Scientist\" },\r\n+  { title: \"WageGG\", color: \"bg-pink-500\", job: \"Mobile App Developer\" },\r\n ]\r\n \r\n const HomepagePosts = () => {\r\n   return (\r\n@@ -53,8 +53,9 @@\n                 title: card.title,\r\n                 content: developerJokes[index % developerJokes.length],\r\n                 author: \"Developer\",\r\n                 createdAt: new Date().toISOString(),\r\n+                job: card.job,\r\n                 imageUrl: `/placeholder.jpg?text=${card.title}`,\r\n               }}\r\n               index={index}\r\n               color={card.color}\r\n"
                },
                {
                    "date": 1738836356470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,8 @@\n                 content: developerJokes[index % developerJokes.length],\r\n                 author: \"Developer\",\r\n                 createdAt: new Date().toISOString(),\r\n                 job: card.job,\r\n-                imageUrl: `/placeholder.jpg?text=${card.title}`,\r\n               }}\r\n               index={index}\r\n               color={card.color}\r\n             />\r\n"
                },
                {
                    "date": 1738836364843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,9 @@\n                 content: developerJokes[index % developerJokes.length],\r\n                 author: \"Developer\",\r\n                 createdAt: new Date().toISOString(),\r\n                 job: card.job,\r\n+                imageUrl: `/placeholder.jpg?text=${card.title}`,\r\n               }}\r\n               index={index}\r\n               color={card.color}\r\n             />\r\n"
                },
                {
                    "date": 1738836399260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,11 @@\n ]\r\n \r\n const cardData = [\r\n   { title: \"ToDy95\", color: \"bg-blue-500\", job: \"Frontend Developer\" },\r\n-  { title: \"BiancaTuna\", color: \"bg-green-500\", job: \"Backend Developer\" },\r\n-  { title: \"MedaToma\", color: \"bg-yellow-500\", job: \"Full Stack Developer\" },\r\n-  { title: \"SimonaGhior\", color: \"bg-purple-500\", job: \"UI/UX Designer\" },\r\n+  { title: \"BiancaTuna\", color: \"bg-green-500\", job: \"Frontend Developer\" },\r\n+  { title: \"MedaToma\", color: \"bg-yellow-500\", job: \"Frontend Developer\" },\r\n+  { title: \"SimonaGhior\", color: \"bg-purple-500\", job: \"Frontend Developer\" },\r\n   { title: \"Cipster93\", color: \"bg-red-500\", job: \"DevOps Engineer\" },\r\n   { title: \"RobertBalu\", color: \"bg-indigo-500\", job: \"Data Scientist\" },\r\n   { title: \"WageGG\", color: \"bg-pink-500\", job: \"Mobile App Developer\" },\r\n ]\r\n"
                },
                {
                    "date": 1738836407834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n   { title: \"ToDy95\", color: \"bg-blue-500\", job: \"Frontend Developer\" },\r\n   { title: \"BiancaTuna\", color: \"bg-green-500\", job: \"Frontend Developer\" },\r\n   { title: \"MedaToma\", color: \"bg-yellow-500\", job: \"Frontend Developer\" },\r\n   { title: \"SimonaGhior\", color: \"bg-purple-500\", job: \"Frontend Developer\" },\r\n-  { title: \"Cipster93\", color: \"bg-red-500\", job: \"DevOps Engineer\" },\r\n-  { title: \"RobertBalu\", color: \"bg-indigo-500\", job: \"Data Scientist\" },\r\n+  { title: \"Cipster93\", color: \"bg-red-500\", job: \"Frontend Developer\" },\r\n+  { title: \"RobertBalu\", color: \"bg-indigo-500\", job: \"Frontend Developer\" },\r\n   { title: \"WageGG\", color: \"bg-pink-500\", job: \"Mobile App Developer\" },\r\n ]\r\n \r\n const HomepagePosts = () => {\r\n"
                },
                {
                    "date": 1738836446440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   { title: \"MedaToma\", color: \"bg-yellow-500\", job: \"Frontend Developer\" },\r\n   { title: \"SimonaGhior\", color: \"bg-purple-500\", job: \"Frontend Developer\" },\r\n   { title: \"Cipster93\", color: \"bg-red-500\", job: \"Frontend Developer\" },\r\n   { title: \"RobertBalu\", color: \"bg-indigo-500\", job: \"Frontend Developer\" },\r\n-  { title: \"WageGG\", color: \"bg-pink-500\", job: \"Mobile App Developer\" },\r\n+  { title: \"WageGG\", color: \"bg-pink-500\", job: \"Frontend Developer\" },\r\n ]\r\n \r\n const HomepagePosts = () => {\r\n   return (\r\n@@ -54,9 +54,8 @@\n                 content: developerJokes[index % developerJokes.length],\r\n                 author: \"Developer\",\r\n                 createdAt: new Date().toISOString(),\r\n                 job: card.job,\r\n-                imageUrl: `/placeholder.jpg?text=${card.title}`,\r\n               }}\r\n               index={index}\r\n               color={card.color}\r\n             />\r\n"
                },
                {
                    "date": 1738848962437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,14 @@\n+import HomepageCard from \"@/app/_components/homepage-card\";\r\n+import { serverApi } from \"@/trpc/server\";\r\n+\r\n+import React from \"react\";\r\n+\r\n+const HomepagePosts = async () => {\r\n+  const data = await serverApi.post.getAll(); \r\n+\r\n+\r\n+  \r\n import HomepageCard from \"./homepage-card\"\r\n import Link from \"next/link\"\r\n import { ArrowRight } from \"lucide-react\"\r\n \r\n"
                },
                {
                    "date": 1738848987739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n-import HomepageCard from \"@/app/_components/homepage-card\";\r\n-import { serverApi } from \"@/trpc/server\";\r\n+// import HomepageCard from \"@/app/_components/homepage-card\";\r\n+// import { serverApi } from \"@/trpc/server\";\r\n \r\n-import React from \"react\";\r\n+// import React from \"react\";\r\n \r\n-const HomepagePosts = async () => {\r\n-  const data = await serverApi.post.getAll(); \r\n+// const HomepagePosts = async () => {\r\n+//   const data = await serverApi.post.getAll(); \r\n \r\n \r\n-  \r\n+\r\n import HomepageCard from \"./homepage-card\"\r\n import Link from \"next/link\"\r\n import { ArrowRight } from \"lucide-react\"\r\n \r\n"
                },
                {
                    "date": 1738849025640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n // import React from \"react\";\r\n \r\n // const HomepagePosts = async () => {\r\n //   const data = await serverApi.post.getAll(); \r\n+// aici m-am incurcat\r\n \r\n \r\n \r\n import HomepageCard from \"./homepage-card\"\r\n"
                }
            ],
            "date": 1738834796716,
            "name": "Commit-0",
            "content": "import Link from \"next/link\"\r\nimport { Card } from \"@/components/ui/card\"\r\n\r\n// This type should match your actual post data structure\r\ninterface Post {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  url: string\r\n  memberCount?: string\r\n  backgroundColor?: string\r\n  textColor?: string\r\n}\r\n\r\ninterface HomepageCardProps {\r\n  data: Post\r\n}\r\n\r\n// Function to determine background color based on post data\r\nconst getBackgroundColor = (post: Post) => {\r\n  // You can implement your own logic to determine background color\r\n  // This is just an example - modify according to your needs\r\n  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n  return post.backgroundColor || colors[Math.floor(Math.random() * colors.length)]\r\n}\r\n\r\n// Function to determine text color based on background\r\nconst getTextColor = (post: Post) => {\r\n  // You can implement your own logic to determine text color\r\n  // This is just an example - modify according to your needs\r\n  return post.textColor || (post.backgroundColor?.includes(\"FF\") ? \"text-black\" : \"text-white\")\r\n}\r\n\r\nexport default function HomepageCard({ data }: HomepageCardProps) {\r\n  const backgroundColor = getBackgroundColor(data)\r\n  const textColor = getTextColor(data)\r\n\r\n  return (\r\n    <Link href={data.url} className=\"group\">\r\n      <Card\r\n        className={`overflow-hidden transition-transform duration-300 group-hover:-translate-y-1 ${backgroundColor} ${textColor}`}\r\n      >\r\n        <div className=\"aspect-[4/3] relative\">\r\n          <div className=\"absolute inset-0 bg-black/10\" />\r\n        </div>\r\n        <div className=\"p-6\">\r\n          <h3 className=\"text-xl font-bold mb-2\">{data.title}</h3>\r\n          <p className=\"text-sm mb-4 opacity-90\">{data.description}</p>\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm\">{data.url}</span>\r\n            {data.memberCount && <span className=\"text-sm\">{data.memberCount}</span>}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\n\r\n"
        }
    ]
}