{
    "sourceFile": "src/app/_components/homepage-card.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1738834856172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738834878629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,58 +1,27 @@\n-import Link from \"next/link\"\r\n-import { Card } from \"@/components/ui/card\"\r\n+\"use client\";\r\n+import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n+import { type postType } from \"@/server/schemas/post-schemas\";\r\n+import { useRouter } from \"next/navigation\";\r\n \r\n-// This type should match your actual post data structure\r\n-interface Post {\r\n-  id: string\r\n-  title: string\r\n-  description: string\r\n-  url: string\r\n-  memberCount?: string\r\n-  backgroundColor?: string\r\n-  textColor?: string\r\n-}\r\n+export default function HomepageCard({ data }: { data: postType }) {\r\n+  const excerpt =\r\n+    data.content.length > 300\r\n+      ? data.content.substring(0, 300) + \"...\"\r\n+      : data.content;\r\n \r\n-interface HomepageCardProps {\r\n-  data: Post\r\n-}\r\n+  const router = useRouter();\r\n \r\n-// Function to determine background color based on post data\r\n-const getBackgroundColor = (post: Post) => {\r\n-  // You can implement your own logic to determine background color\r\n-  // This is just an example - modify according to your needs\r\n-  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n-  return post.backgroundColor || colors[Math.floor(Math.random() * colors.length)]\r\n-}\r\n-\r\n-// Function to determine text color based on background\r\n-const getTextColor = (post: Post) => {\r\n-  // You can implement your own logic to determine text color\r\n-  // This is just an example - modify according to your needs\r\n-  return post.textColor || (post.backgroundColor?.includes(\"FF\") ? \"text-black\" : \"text-white\")\r\n-}\r\n-\r\n-export default function HomepageCard({ data }: HomepageCardProps) {\r\n-  const backgroundColor = getBackgroundColor(data)\r\n-  const textColor = getTextColor(data)\r\n-\r\n   return (\r\n-    <Link href={data.url} className=\"group\">\r\n-      <Card\r\n-        className={`overflow-hidden transition-transform duration-300 group-hover:-translate-y-1 ${backgroundColor} ${textColor}`}\r\n-      >\r\n-        <div className=\"aspect-[4/3] relative\">\r\n-          <div className=\"absolute inset-0 bg-black/10\" />\r\n-        </div>\r\n-        <div className=\"p-6\">\r\n-          <h3 className=\"text-xl font-bold mb-2\">{data.title}</h3>\r\n-          <p className=\"text-sm mb-4 opacity-90\">{data.description}</p>\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <span className=\"text-sm\">{data.url}</span>\r\n-            {data.memberCount && <span className=\"text-sm\">{data.memberCount}</span>}\r\n-          </div>\r\n-        </div>\r\n-      </Card>\r\n-    </Link>\r\n-  )\r\n+    <Card\r\n+      className=\"mx-auto w-full max-w-md transition-shadow hover:shadow-lg\"\r\n+      onClick={() => router.push(`/post?id=${data.id}`)}\r\n+    >\r\n+      <CardHeader className=\"p-4\">\r\n+        <CardTitle className=\"text-xl font-semibold\">{data.title}</CardTitle>\r\n+      </CardHeader>\r\n+      <CardContent className=\"p-4 text-gray-600\">\r\n+        <p>{excerpt}</p>\r\n+      </CardContent>\r\n+    </Card>\r\n+  );\r\n }\r\n-\r\n"
                },
                {
                    "date": 1738835089014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,49 @@\n-\"use client\";\r\n-import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n-import { type postType } from \"@/server/schemas/post-schemas\";\r\n-import { useRouter } from \"next/navigation\";\r\n+\"use client\"\r\n \r\n+import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\n+import type { postType } from \"@/server/schemas/post-schemas\"\r\n+import { useRouter } from \"next/navigation\"\r\n+\r\n+// Function to determine background color based on post data\r\n+const getBackgroundColor = (post: postType) => {\r\n+  // You can implement your own logic to determine background color\r\n+  // This is just an example - modify according to your needs\r\n+  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n+  return colors[Math.floor(Math.random() * colors.length)]\r\n+}\r\n+\r\n+// Function to determine text color based on background\r\n+const getTextColor = (backgroundColor: string) => {\r\n+  // You can implement your own logic to determine text color\r\n+  // This is just an example - modify according to your needs\r\n+  return backgroundColor.includes(\"FF\") ? \"text-black\" : \"text-white\"\r\n+}\r\n+\r\n export default function HomepageCard({ data }: { data: postType }) {\r\n-  const excerpt =\r\n-    data.content.length > 300\r\n-      ? data.content.substring(0, 300) + \"...\"\r\n-      : data.content;\r\n+  const router = useRouter()\r\n+  const excerpt = data.content.length > 150 ? data.content.substring(0, 150) + \"...\" : data.content\r\n+  const backgroundColor = getBackgroundColor(data)\r\n+  const textColor = getTextColor(backgroundColor)\r\n \r\n-  const router = useRouter();\r\n-\r\n   return (\r\n     <Card\r\n-      className=\"mx-auto w-full max-w-md transition-shadow hover:shadow-lg\"\r\n+      className={`mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer ${backgroundColor} ${textColor}`}\r\n       onClick={() => router.push(`/post?id=${data.id}`)}\r\n     >\r\n-      <CardHeader className=\"p-4\">\r\n-        <CardTitle className=\"text-xl font-semibold\">{data.title}</CardTitle>\r\n+      <div className=\"aspect-[4/3] relative\">\r\n+        <div className=\"absolute inset-0 bg-black/10\" />\r\n+      </div>\r\n+      <CardHeader className=\"p-6\">\r\n+        <CardTitle className=\"text-xl font-bold\">{data.title}</CardTitle>\r\n       </CardHeader>\r\n-      <CardContent className=\"p-4 text-gray-600\">\r\n-        <p>{excerpt}</p>\r\n+      <CardContent className=\"p-6 pt-0\">\r\n+        <p className=\"text-sm mb-4 opacity-90\">{excerpt}</p>\r\n+        <div className=\"flex items-center justify-between text-sm\">\r\n+          <span>{data.author}</span>\r\n+          <span>{new Date(data.createdAt).toLocaleDateString()}</span>\r\n+        </div>\r\n       </CardContent>\r\n     </Card>\r\n-  );\r\n+  )\r\n }\r\n+\r\n"
                },
                {
                    "date": 1738835414642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,33 @@\n \"use client\"\r\n \r\n import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\n-import type { postType } from \"@/server/schemas/post-schemas\"\r\n+import type { PostType } from \"@/schemas/post\"\r\n import { useRouter } from \"next/navigation\"\r\n+import Image from \"next/image\"\r\n \r\n-// Function to determine background color based on post data\r\n-const getBackgroundColor = (post: postType) => {\r\n-  // You can implement your own logic to determine background color\r\n-  // This is just an example - modify according to your needs\r\n+const getBackgroundColor = (index: number) => {\r\n   const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n-  return colors[Math.floor(Math.random() * colors.length)]\r\n+  return colors[index % colors.length]\r\n }\r\n \r\n-// Function to determine text color based on background\r\n const getTextColor = (backgroundColor: string) => {\r\n-  // You can implement your own logic to determine text color\r\n-  // This is just an example - modify according to your needs\r\n   return backgroundColor.includes(\"FF\") ? \"text-black\" : \"text-white\"\r\n }\r\n \r\n-export default function HomepageCard({ data }: { data: postType }) {\r\n+export default function HomepageCard({ data, index }: { data: PostType; index: number }) {\r\n   const router = useRouter()\r\n   const excerpt = data.content.length > 150 ? data.content.substring(0, 150) + \"...\" : data.content\r\n-  const backgroundColor = getBackgroundColor(data)\r\n+  const backgroundColor = getBackgroundColor(index)\r\n   const textColor = getTextColor(backgroundColor)\r\n \r\n   return (\r\n     <Card\r\n-      className={`mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer ${backgroundColor} ${textColor}`}\r\n+      className={`rounded-xl shadow mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer overflow-hidden ${backgroundColor} ${textColor}`}\r\n       onClick={() => router.push(`/post?id=${data.id}`)}\r\n     >\r\n       <div className=\"aspect-[4/3] relative\">\r\n+        <Image src={data.imageUrl || \"/placeholder.jpg\"} alt={data.title} layout=\"fill\" objectFit=\"cover\" />\r\n         <div className=\"absolute inset-0 bg-black/10\" />\r\n       </div>\r\n       <CardHeader className=\"p-6\">\r\n         <CardTitle className=\"text-xl font-bold\">{data.title}</CardTitle>\r\n"
                },
                {
                    "date": 1738835515347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n   return colors[index % colors.length]\r\n }\r\n \r\n const getTextColor = (backgroundColor: string) => {\r\n-  return backgroundColor.includes(\"FF\") ? \"text-black\" : \"text-white\"\r\n+  if (backgroundColor.includes(\"0052FF\")) return \"text-white\"\r\n+  return \"text-black\"\r\n }\r\n \r\n export default function HomepageCard({ data, index }: { data: PostType; index: number }) {\r\n   const router = useRouter()\r\n"
                },
                {
                    "date": 1738835570206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,22 +4,23 @@\n import type { PostType } from \"@/schemas/post\"\r\n import { useRouter } from \"next/navigation\"\r\n import Image from \"next/image\"\r\n \r\n-const getBackgroundColor = (index: number) => {\r\n+const getBackgroundColor = (index: number): string => {\r\n   const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n-  return colors[index % colors.length]\r\n+  return colors[index % colors.length] || \"bg-gray-200\" // Fallback color\r\n }\r\n \r\n-const getTextColor = (backgroundColor: string) => {\r\n+const getTextColor = (backgroundColor: string): string => {\r\n+  if (typeof backgroundColor !== \"string\") return \"text-black\" // Fallback\r\n   if (backgroundColor.includes(\"0052FF\")) return \"text-white\"\r\n   return \"text-black\"\r\n }\r\n \r\n export default function HomepageCard({ data, index }: { data: PostType; index: number }) {\r\n   const router = useRouter()\r\n   const excerpt = data.content.length > 150 ? data.content.substring(0, 150) + \"...\" : data.content\r\n-  const backgroundColor = getBackgroundColor(index)\r\n+  const backgroundColor = getBackgroundColor(index ?? 0)\r\n   const textColor = getTextColor(backgroundColor)\r\n \r\n   return (\r\n     <Card\r\n"
                },
                {
                    "date": 1738835823085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,38 @@\n \"use client\"\r\n \r\n import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\n-import type { PostType } from \"@/schemas/post\"\r\n import { useRouter } from \"next/navigation\"\r\n import Image from \"next/image\"\r\n \r\n-const getBackgroundColor = (index: number): string => {\r\n-  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n-  return colors[index % colors.length] || \"bg-gray-200\" // Fallback color\r\n+interface PostType {\r\n+  id: string\r\n+  title: string\r\n+  content: string\r\n+  author: string\r\n+  createdAt: string\r\n+  imageUrl?: string\r\n }\r\n \r\n+interface HomepageCardProps {\r\n+  data: PostType\r\n+  index: number\r\n+  color: string\r\n+}\r\n+\r\n const getTextColor = (backgroundColor: string): string => {\r\n-  if (typeof backgroundColor !== \"string\") return \"text-black\" // Fallback\r\n-  if (backgroundColor.includes(\"0052FF\")) return \"text-white\"\r\n-  return \"text-black\"\r\n+  const darkColors = [\"bg-blue-500\", \"bg-purple-500\", \"bg-indigo-500\"]\r\n+  return darkColors.includes(backgroundColor) ? \"text-white\" : \"text-black\"\r\n }\r\n \r\n-export default function HomepageCard({ data, index }: { data: PostType; index: number }) {\r\n+export default function HomepageCard({ data, index, color }: HomepageCardProps) {\r\n   const router = useRouter()\r\n   const excerpt = data.content.length > 150 ? data.content.substring(0, 150) + \"...\" : data.content\r\n-  const backgroundColor = getBackgroundColor(index ?? 0)\r\n-  const textColor = getTextColor(backgroundColor)\r\n+  const textColor = getTextColor(color)\r\n \r\n   return (\r\n     <Card\r\n-      className={`rounded-xl shadow mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer overflow-hidden ${backgroundColor} ${textColor}`}\r\n+      className={`rounded-xl shadow mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer overflow-hidden ${color} ${textColor}`}\r\n       onClick={() => router.push(`/post?id=${data.id}`)}\r\n     >\r\n       <div className=\"aspect-[4/3] relative\">\r\n         <Image src={data.imageUrl || \"/placeholder.jpg\"} alt={data.title} layout=\"fill\" objectFit=\"cover\" />\r\n"
                },
                {
                    "date": 1738836043726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,8 @@\n       className={`rounded-xl shadow mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer overflow-hidden ${color} ${textColor}`}\r\n       onClick={() => router.push(`/post?id=${data.id}`)}\r\n     >\r\n       <div className=\"aspect-[4/3] relative\">\r\n-        <Image src={data.imageUrl || \"/placeholder.jpg\"} alt={data.title} layout=\"fill\" objectFit=\"cover\" />\r\n         <div className=\"absolute inset-0 bg-black/10\" />\r\n       </div>\r\n       <CardHeader className=\"p-6\">\r\n         <CardTitle className=\"text-xl font-bold\">{data.title}</CardTitle>\r\n"
                },
                {
                    "date": 1738836303126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \"use client\"\r\n \r\n-import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\n+import { Card, CardContent, CardTitle } from \"@/components/ui/card\"\r\n import { useRouter } from \"next/navigation\"\r\n import Image from \"next/image\"\r\n \r\n interface PostType {\r\n@@ -9,8 +9,9 @@\n   title: string\r\n   content: string\r\n   author: string\r\n   createdAt: string\r\n+  job: string\r\n   imageUrl?: string\r\n }\r\n \r\n interface HomepageCardProps {\r\n@@ -25,26 +26,30 @@\n }\r\n \r\n export default function HomepageCard({ data, index, color }: HomepageCardProps) {\r\n   const router = useRouter()\r\n-  const excerpt = data.content.length > 150 ? data.content.substring(0, 150) + \"...\" : data.content\r\n   const textColor = getTextColor(color)\r\n \r\n   return (\r\n     <Card\r\n       className={`rounded-xl shadow mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer overflow-hidden ${color} ${textColor}`}\r\n       onClick={() => router.push(`/post?id=${data.id}`)}\r\n     >\r\n       <div className=\"aspect-[4/3] relative\">\r\n+        <Image src={data.imageUrl || \"/placeholder.jpg\"} alt={data.title} layout=\"fill\" objectFit=\"cover\" />\r\n         <div className=\"absolute inset-0 bg-black/10\" />\r\n+        <div className=\"absolute inset-0 flex items-center justify-center p-6\">\r\n+          <p className=\"text-lg font-medium text-center drop-shadow-[0_2px_4px_rgba(0,0,0,0.8)] text-white\">\r\n+            {data.content}\r\n+          </p>\r\n+        </div>\r\n       </div>\r\n-      <CardHeader className=\"p-6\">\r\n-        <CardTitle className=\"text-xl font-bold\">{data.title}</CardTitle>\r\n-      </CardHeader>\r\n-      <CardContent className=\"p-6 pt-0\">\r\n-        <p className=\"text-sm mb-4 opacity-90\">{excerpt}</p>\r\n+      <CardContent className=\"p-4\">\r\n         <div className=\"flex items-center justify-between text-sm\">\r\n-          <span>{data.author}</span>\r\n+          <div>\r\n+            <CardTitle className=\"text-lg font-bold mb-1\">{data.title}</CardTitle>\r\n+            <span className=\"opacity-75\">{data.job}</span>\r\n+          </div>\r\n           <span>{new Date(data.createdAt).toLocaleDateString()}</span>\r\n         </div>\r\n       </CardContent>\r\n     </Card>\r\n"
                },
                {
                    "date": 1738836467860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n   content: string\r\n   author: string\r\n   createdAt: string\r\n   job: string\r\n-  imageUrl?: string\r\n }\r\n \r\n interface HomepageCardProps {\r\n   data: PostType\r\n"
                },
                {
                    "date": 1738836488208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n \"use client\"\r\n \r\n import { Card, CardContent, CardTitle } from \"@/components/ui/card\"\r\n import { useRouter } from \"next/navigation\"\r\n-import Image from \"next/image\"\r\n \r\n interface PostType {\r\n   id: string\r\n   title: string\r\n"
                },
                {
                    "date": 1738836496987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n \"use client\"\r\n \r\n import { Card, CardContent, CardTitle } from \"@/components/ui/card\"\r\n import { useRouter } from \"next/navigation\"\r\n+import Image from \"next/image\"\r\n \r\n interface PostType {\r\n   id: string\r\n   title: string\r\n"
                },
                {
                    "date": 1738836584153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n \"use client\"\r\n \r\n import { Card, CardContent, CardTitle } from \"@/components/ui/card\"\r\n import { useRouter } from \"next/navigation\"\r\n-import Image from \"next/image\"\r\n \r\n interface PostType {\r\n   id: string\r\n   title: string\r\n   content: string\r\n   author: string\r\n   createdAt: string\r\n   job: string\r\n+  imageUrl?: string\r\n }\r\n \r\n interface HomepageCardProps {\r\n   data: PostType\r\n@@ -32,16 +32,12 @@\n     <Card\r\n       className={`rounded-xl shadow mx-auto w-full transition-all hover:-translate-y-1 hover:shadow-lg cursor-pointer overflow-hidden ${color} ${textColor}`}\r\n       onClick={() => router.push(`/post?id=${data.id}`)}\r\n     >\r\n-      <div className=\"aspect-[4/3] relative\">\r\n-        <Image src={data.imageUrl || \"/placeholder.jpg\"} alt={data.title} layout=\"fill\" objectFit=\"cover\" />\r\n-        <div className=\"absolute inset-0 bg-black/10\" />\r\n-        <div className=\"absolute inset-0 flex items-center justify-center p-6\">\r\n-          <p className=\"text-lg font-medium text-center drop-shadow-[0_2px_4px_rgba(0,0,0,0.8)] text-white\">\r\n-            {data.content}\r\n-          </p>\r\n-        </div>\r\n+      <div className=\"aspect-[4/3] relative flex items-center justify-center p-6 bg-opacity-90\">\r\n+        <p className=\"text-lg font-medium text-center drop-shadow-[0_2px_4px_rgba(0,0,0,0.8)] text-white\">\r\n+          {data.content}\r\n+        </p>\r\n       </div>\r\n       <CardContent className=\"p-4\">\r\n         <div className=\"flex items-center justify-between text-sm\">\r\n           <div>\r\n"
                }
            ],
            "date": 1738834856172,
            "name": "Commit-0",
            "content": "import Link from \"next/link\"\r\nimport { Card } from \"@/components/ui/card\"\r\n\r\n// This type should match your actual post data structure\r\ninterface Post {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  url: string\r\n  memberCount?: string\r\n  backgroundColor?: string\r\n  textColor?: string\r\n}\r\n\r\ninterface HomepageCardProps {\r\n  data: Post\r\n}\r\n\r\n// Function to determine background color based on post data\r\nconst getBackgroundColor = (post: Post) => {\r\n  // You can implement your own logic to determine background color\r\n  // This is just an example - modify according to your needs\r\n  const colors = [\"bg-[#0052FF]\", \"bg-[#9EFF6B]\", \"bg-[#FFD700]\"]\r\n  return post.backgroundColor || colors[Math.floor(Math.random() * colors.length)]\r\n}\r\n\r\n// Function to determine text color based on background\r\nconst getTextColor = (post: Post) => {\r\n  // You can implement your own logic to determine text color\r\n  // This is just an example - modify according to your needs\r\n  return post.textColor || (post.backgroundColor?.includes(\"FF\") ? \"text-black\" : \"text-white\")\r\n}\r\n\r\nexport default function HomepageCard({ data }: HomepageCardProps) {\r\n  const backgroundColor = getBackgroundColor(data)\r\n  const textColor = getTextColor(data)\r\n\r\n  return (\r\n    <Link href={data.url} className=\"group\">\r\n      <Card\r\n        className={`overflow-hidden transition-transform duration-300 group-hover:-translate-y-1 ${backgroundColor} ${textColor}`}\r\n      >\r\n        <div className=\"aspect-[4/3] relative\">\r\n          <div className=\"absolute inset-0 bg-black/10\" />\r\n        </div>\r\n        <div className=\"p-6\">\r\n          <h3 className=\"text-xl font-bold mb-2\">{data.title}</h3>\r\n          <p className=\"text-sm mb-4 opacity-90\">{data.description}</p>\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm\">{data.url}</span>\r\n            {data.memberCount && <span className=\"text-sm\">{data.memberCount}</span>}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\n\r\n"
        }
    ]
}